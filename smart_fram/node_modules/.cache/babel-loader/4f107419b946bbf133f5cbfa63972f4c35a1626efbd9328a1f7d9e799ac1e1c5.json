{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  cartItems: [],\n  totalItems: 0,\n  totalPrice: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      const item = action.payload;\n      const existingItem = state.cartItems.find(i => i.id === item.id);\n      if (existingItem) {\n        // If the item exists, update the quantity\n        existingItem.quantity += 1;\n      } else {\n        // If the item doesn't exist, add it to the cart\n        state.cartItems.push({\n          ...item,\n          quantity: 1\n        });\n      }\n\n      // Recalculate the total items and price\n      state.totalItems = state.cartItems.reduce((acc, curr) => acc + curr.quantity, 0);\n      state.totalPrice = state.cartItems.reduce((acc, curr) => acc + curr.price * curr.quantity, 0);\n    },\n    removeFromCart: (state, action) => {\n      state.cartItems = state.cartItems.filter(item => item.id !== action.payload);\n      // Recalculate the total items and price\n      state.totalItems = state.cartItems.reduce((acc, curr) => acc + curr.quantity, 0);\n      state.totalPrice = state.cartItems.reduce((acc, curr) => acc + curr.price * curr.quantity, 0);\n    },\n    clearCart: state => {\n      state.cartItems = [];\n      state.totalItems = 0;\n      state.totalPrice = 0;\n    }\n  }\n});\nexport const {\n  addToCart,\n  removeFromCart,\n  clearCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","cartItems","totalItems","totalPrice","cartSlice","name","reducers","addToCart","state","action","item","payload","existingItem","find","i","id","quantity","push","reduce","acc","curr","price","removeFromCart","filter","clearCart","actions","reducer"],"sources":["C:/Users/mfrap/OneDrive/Desktop/FramFlo/smart_fram/src/ProductSlice/CartSlice.jsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  cartItems: [],\r\n  totalItems: 0,\r\n  totalPrice: 0,\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    addToCart: (state, action) => {\r\n      const item = action.payload;\r\n      const existingItem = state.cartItems.find((i) => i.id === item.id);\r\n\r\n      if (existingItem) {\r\n        // If the item exists, update the quantity\r\n        existingItem.quantity += 1;\r\n      } else {\r\n        // If the item doesn't exist, add it to the cart\r\n        state.cartItems.push({ ...item, quantity: 1 });\r\n      }\r\n\r\n      // Recalculate the total items and price\r\n      state.totalItems = state.cartItems.reduce(\r\n        (acc, curr) => acc + curr.quantity,\r\n        0\r\n      );\r\n      state.totalPrice = state.cartItems.reduce(\r\n        (acc, curr) => acc + curr.price * curr.quantity,\r\n        0\r\n      );\r\n    },\r\n    removeFromCart: (state, action) => {\r\n      state.cartItems = state.cartItems.filter(\r\n        (item) => item.id !== action.payload\r\n      );\r\n      // Recalculate the total items and price\r\n      state.totalItems = state.cartItems.reduce(\r\n        (acc, curr) => acc + curr.quantity,\r\n        0\r\n      );\r\n      state.totalPrice = state.cartItems.reduce(\r\n        (acc, curr) => acc + curr.price * curr.quantity,\r\n        0\r\n      );\r\n    },\r\n    clearCart: (state) => {\r\n      state.cartItems = [];\r\n      state.totalItems = 0;\r\n      state.totalPrice = 0;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addToCart, removeFromCart, clearCart } = cartSlice.actions;\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,EAAE;EACbC,UAAU,EAAE,CAAC;EACbC,UAAU,EAAE;AACd,CAAC;AAED,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC5BM,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE;IACRC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5B,MAAMC,IAAI,GAAGD,MAAM,CAACE,OAAO;MAC3B,MAAMC,YAAY,GAAGJ,KAAK,CAACP,SAAS,CAACY,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKL,IAAI,CAACK,EAAE,CAAC;MAElE,IAAIH,YAAY,EAAE;QAChB;QACAA,YAAY,CAACI,QAAQ,IAAI,CAAC;MAC5B,CAAC,MAAM;QACL;QACAR,KAAK,CAACP,SAAS,CAACgB,IAAI,CAAC;UAAE,GAAGP,IAAI;UAAEM,QAAQ,EAAE;QAAE,CAAC,CAAC;MAChD;;MAEA;MACAR,KAAK,CAACN,UAAU,GAAGM,KAAK,CAACP,SAAS,CAACiB,MAAM,CACvC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAGC,IAAI,CAACJ,QAAQ,EAClC,CACF,CAAC;MACDR,KAAK,CAACL,UAAU,GAAGK,KAAK,CAACP,SAAS,CAACiB,MAAM,CACvC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAGC,IAAI,CAACC,KAAK,GAAGD,IAAI,CAACJ,QAAQ,EAC/C,CACF,CAAC;IACH,CAAC;IACDM,cAAc,EAAEA,CAACd,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAACP,SAAS,GAAGO,KAAK,CAACP,SAAS,CAACsB,MAAM,CACrCb,IAAI,IAAKA,IAAI,CAACK,EAAE,KAAKN,MAAM,CAACE,OAC/B,CAAC;MACD;MACAH,KAAK,CAACN,UAAU,GAAGM,KAAK,CAACP,SAAS,CAACiB,MAAM,CACvC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAGC,IAAI,CAACJ,QAAQ,EAClC,CACF,CAAC;MACDR,KAAK,CAACL,UAAU,GAAGK,KAAK,CAACP,SAAS,CAACiB,MAAM,CACvC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAGC,IAAI,CAACC,KAAK,GAAGD,IAAI,CAACJ,QAAQ,EAC/C,CACF,CAAC;IACH,CAAC;IACDQ,SAAS,EAAGhB,KAAK,IAAK;MACpBA,KAAK,CAACP,SAAS,GAAG,EAAE;MACpBO,KAAK,CAACN,UAAU,GAAG,CAAC;MACpBM,KAAK,CAACL,UAAU,GAAG,CAAC;IACtB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI,SAAS;EAAEe,cAAc;EAAEE;AAAU,CAAC,GAAGpB,SAAS,CAACqB,OAAO;AACzE,eAAerB,SAAS,CAACsB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}