{"ast":null,"code":"// src/Slice/ProductsSlice.js\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\n// Example of fetching products (you can adjust the API URL)\nexport const fetchProducts = createAsyncThunk(\"products/fetchProducts\", async () => {\n  const response = await fetch(\"http://localhost:8000/api/products/\");\n  return response.json();\n});\nconst productsSlice = createSlice({\n  name: \"products\",\n  initialState: {\n    products: [],\n    // Make sure it's an empty array initially\n    status: \"idle\",\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchProducts.pending, state => {\n      state.status = \"loading\";\n    }).addCase(fetchProducts.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      state.products = action.payload; // Ensure action.payload is an array\n    }).addCase(fetchProducts.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.error = action.error.message;\n    });\n  }\n});\nexport default productsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchProducts","response","fetch","json","productsSlice","name","initialState","products","status","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["C:/Users/mfrap/OneDrive/Desktop/FramFlo/smart_fram/src/Slice/ProductsSlice.jsx"],"sourcesContent":["// src/Slice/ProductsSlice.js\r\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\n// Example of fetching products (you can adjust the API URL)\r\nexport const fetchProducts = createAsyncThunk(\r\n  \"products/fetchProducts\",\r\n  async () => {\r\n    const response = await fetch(\"http://localhost:8000/api/products/\");\r\n    return response.json();\r\n  }\r\n);\r\n\r\nconst productsSlice = createSlice({\r\n  name: \"products\",\r\n  initialState: {\r\n    products: [], // Make sure it's an empty array initially\r\n    status: \"idle\",\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchProducts.pending, (state) => {\r\n        state.status = \"loading\";\r\n      })\r\n      .addCase(fetchProducts.fulfilled, (state, action) => {\r\n        state.status = \"succeeded\";\r\n        state.products = action.payload; // Ensure action.payload is an array\r\n      })\r\n      .addCase(fetchProducts.rejected, (state, action) => {\r\n        state.status = \"failed\";\r\n        state.error = action.error.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport default productsSlice.reducer;\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;;AAEhE;AACA,OAAO,MAAMC,aAAa,GAAGD,gBAAgB,CAC3C,wBAAwB,EACxB,YAAY;EACV,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC;EACnE,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB,CACF,CAAC;AAED,MAAMC,aAAa,GAAGN,WAAW,CAAC;EAChCO,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACZC,QAAQ,EAAE,EAAE;IAAE;IACdC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACb,aAAa,CAACc,OAAO,EAAGC,KAAK,IAAK;MACzCA,KAAK,CAACP,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDK,OAAO,CAACb,aAAa,CAACgB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACnDF,KAAK,CAACP,MAAM,GAAG,WAAW;MAC1BO,KAAK,CAACR,QAAQ,GAAGU,MAAM,CAACC,OAAO,CAAC,CAAC;IACnC,CAAC,CAAC,CACDL,OAAO,CAACb,aAAa,CAACmB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAClDF,KAAK,CAACP,MAAM,GAAG,QAAQ;MACvBO,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACR,KAAK,CAACW,OAAO;IACpC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAehB,aAAa,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}