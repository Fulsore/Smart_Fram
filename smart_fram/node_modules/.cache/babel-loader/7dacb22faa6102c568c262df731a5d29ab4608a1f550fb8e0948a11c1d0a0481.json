{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n\n// Helper function to get cart from localStorage\nconst getCartFromLocalStorage = () => {\n  const storedCart = localStorage.getItem(\"cartItems\");\n  return storedCart ? JSON.parse(storedCart) : [];\n};\nconst initialState = {\n  cartItems: getCartFromLocalStorage(),\n  totalItems: 0,\n  totalPrice: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      const item = action.payload;\n      const existingItem = state.cartItems.find(x => x.id === item.id);\n      if (existingItem) {\n        // Update quantity if item already exists\n        existingItem.quantity += 1;\n      } else {\n        // Add new item with quantity 1\n        state.cartItems.push({\n          ...item,\n          quantity: 1\n        });\n      }\n\n      // Save to localStorage\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n\n      // Recalculate total items and price\n      state.totalItems = state.cartItems.reduce((acc, item) => acc + item.quantity, 0);\n      state.totalPrice = state.cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0);\n    },\n    removeFromCart: (state, action) => {\n      const id = action.payload;\n      state.cartItems = state.cartItems.filter(x => x.id !== id);\n\n      // Save to localStorage\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n\n      // Recalculate total items and price\n      state.totalItems = state.cartItems.reduce((acc, item) => acc + item.quantity, 0);\n      state.totalPrice = state.cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0);\n    },\n    clearCart: state => {\n      state.cartItems = [];\n      localStorage.removeItem(\"cartItems\"); // Clear cart from localStorage\n      state.totalItems = 0;\n      state.totalPrice = 0;\n    }\n  }\n});\nexport const {\n  addToCart,\n  removeFromCart,\n  clearCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","getCartFromLocalStorage","storedCart","localStorage","getItem","JSON","parse","initialState","cartItems","totalItems","totalPrice","cartSlice","name","reducers","addToCart","state","action","item","payload","existingItem","find","x","id","quantity","push","setItem","stringify","reduce","acc","price","removeFromCart","filter","clearCart","removeItem","actions","reducer"],"sources":["C:/Users/mfrap/OneDrive/Desktop/FramFlo/smart_fram/src/ProductSlice/CartSlice.jsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n// Helper function to get cart from localStorage\r\nconst getCartFromLocalStorage = () => {\r\n  const storedCart = localStorage.getItem(\"cartItems\");\r\n  return storedCart ? JSON.parse(storedCart) : [];\r\n};\r\n\r\nconst initialState = {\r\n  cartItems: getCartFromLocalStorage(),\r\n  totalItems: 0,\r\n  totalPrice: 0,\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    addToCart: (state, action) => {\r\n      const item = action.payload;\r\n      const existingItem = state.cartItems.find((x) => x.id === item.id);\r\n\r\n      if (existingItem) {\r\n        // Update quantity if item already exists\r\n        existingItem.quantity += 1;\r\n      } else {\r\n        // Add new item with quantity 1\r\n        state.cartItems.push({ ...item, quantity: 1 });\r\n      }\r\n\r\n      // Save to localStorage\r\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\r\n\r\n      // Recalculate total items and price\r\n      state.totalItems = state.cartItems.reduce(\r\n        (acc, item) => acc + item.quantity,\r\n        0\r\n      );\r\n      state.totalPrice = state.cartItems.reduce(\r\n        (acc, item) => acc + item.price * item.quantity,\r\n        0\r\n      );\r\n    },\r\n    removeFromCart: (state, action) => {\r\n      const id = action.payload;\r\n      state.cartItems = state.cartItems.filter((x) => x.id !== id);\r\n\r\n      // Save to localStorage\r\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\r\n\r\n      // Recalculate total items and price\r\n      state.totalItems = state.cartItems.reduce(\r\n        (acc, item) => acc + item.quantity,\r\n        0\r\n      );\r\n      state.totalPrice = state.cartItems.reduce(\r\n        (acc, item) => acc + item.price * item.quantity,\r\n        0\r\n      );\r\n    },\r\n    clearCart: (state) => {\r\n      state.cartItems = [];\r\n      localStorage.removeItem(\"cartItems\"); // Clear cart from localStorage\r\n      state.totalItems = 0;\r\n      state.totalPrice = 0;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addToCart, removeFromCart, clearCart } = cartSlice.actions;\r\nexport default cartSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}