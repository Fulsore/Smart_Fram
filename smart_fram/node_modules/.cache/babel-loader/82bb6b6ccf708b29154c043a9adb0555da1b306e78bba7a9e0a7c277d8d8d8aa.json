{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mfrap\\\\OneDrive\\\\Desktop\\\\FramFlo\\\\smart_fram\\\\src\\\\Authentication\\\\Register.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { registerUser } from \"./authSlice\"; // Adjust the import based on your file structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  const [error, setError] = useState(null);\n  const dispatch = useDispatch();\n  const {\n    loading\n  } = useSelector(state => state.auth);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await dispatch(registerUser({\n        email,\n        password,\n        username,\n        role\n      }));\n    } catch (err) {\n      setError(err.error || \"An unknown error occurred\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"Email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          placeholder: \"Username\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: role,\n          onChange: e => setRole(e.target.value),\n          placeholder: \"Role\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? \"Registering...\" : \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"0QKu8Pe/03QvfsODIL6asuv2Xew=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","registerUser","jsxDEV","_jsxDEV","Register","_s","email","setEmail","password","setPassword","username","setUsername","role","setRole","error","setError","dispatch","loading","state","auth","handleSubmit","e","preventDefault","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/mfrap/OneDrive/Desktop/FramFlo/smart_fram/src/Authentication/Register.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { registerUser } from \"./authSlice\"; // Adjust the import based on your file structure\r\n\r\nconst Register = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.auth);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      await dispatch(registerUser({ email, password, username, role }));\r\n    } catch (err) {\r\n      setError(err.error || \"An unknown error occurred\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-form\">\r\n      <h2>Register</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            placeholder=\"Email\"\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            placeholder=\"Password\"\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            placeholder=\"Username\"\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            value={role}\r\n            onChange={(e) => setRole(e.target.value)}\r\n            placeholder=\"Role\"\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" disabled={loading}>\r\n          {loading ? \"Registering...\" : \"Register\"}\r\n        </button>\r\n      </form>\r\n\r\n      {error && <p className=\"error\">{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}