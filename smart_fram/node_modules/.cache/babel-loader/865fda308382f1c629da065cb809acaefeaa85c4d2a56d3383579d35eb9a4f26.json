{"ast":null,"code":"// src/features/auth/authSlice.js\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"../../axios\"; // Import the custom axios instance\n\n// Define initial state\nconst initialState = {\n  user: null,\n  accessToken: localStorage.getItem(\"accessToken\") || null,\n  refreshToken: localStorage.getItem(\"refreshToken\") || null,\n  isAuthenticated: false,\n  loading: false,\n  error: null\n};\n\n// Async thunk for login\nexport const loginUser = createAsyncThunk(\"auth/loginUser\", async (userCredentials, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(\"/api/login/\", userCredentials); // Adjust your endpoint\n    localStorage.setItem(\"accessToken\", response.data.access);\n    localStorage.setItem(\"refreshToken\", response.data.refresh);\n    return response.data; // You can return any additional data you want to store\n  } catch (error) {\n    return rejectWithValue(error.response.data); // Handle errors\n  }\n});\n\n// Async thunk for register\nexport const registerUser = createAsyncThunk(\"auth/registerUser\", async (userData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(\"/api/register/\", userData); // Adjust your endpoint\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\n\n// Create slice\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    logout: state => {\n      state.user = null;\n      state.accessToken = null;\n      state.refreshToken = null;\n      state.isAuthenticated = false;\n      localStorage.removeItem(\"accessToken\");\n      localStorage.removeItem(\"refreshToken\");\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(loginUser.pending, state => {\n      state.loading = true;\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.user = action.payload.user;\n      state.accessToken = action.payload.access;\n      state.refreshToken = action.payload.refresh;\n      state.isAuthenticated = true;\n      state.loading = false;\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }).addCase(registerUser.pending, state => {\n      state.loading = true;\n    }).addCase(registerUser.fulfilled, (state, action) => {\n      state.user = action.payload.user;\n      state.isAuthenticated = true;\n      state.loading = false;\n    }).addCase(registerUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","user","accessToken","localStorage","getItem","refreshToken","isAuthenticated","loading","error","loginUser","userCredentials","rejectWithValue","response","post","setItem","data","access","refresh","registerUser","userData","authSlice","name","reducers","logout","state","removeItem","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["C:/Users/mfrap/OneDrive/Desktop/FramFlo/smart_fram/src/Authentication/AuthSlice.jsx"],"sourcesContent":["// src/features/auth/authSlice.js\r\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"../../axios\"; // Import the custom axios instance\r\n\r\n// Define initial state\r\nconst initialState = {\r\n  user: null,\r\n  accessToken: localStorage.getItem(\"accessToken\") || null,\r\n  refreshToken: localStorage.getItem(\"refreshToken\") || null,\r\n  isAuthenticated: false,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\n// Async thunk for login\r\nexport const loginUser = createAsyncThunk(\r\n  \"auth/loginUser\",\r\n  async (userCredentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(\"/api/login/\", userCredentials); // Adjust your endpoint\r\n      localStorage.setItem(\"accessToken\", response.data.access);\r\n      localStorage.setItem(\"refreshToken\", response.data.refresh);\r\n      return response.data; // You can return any additional data you want to store\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data); // Handle errors\r\n    }\r\n  }\r\n);\r\n\r\n// Async thunk for register\r\nexport const registerUser = createAsyncThunk(\r\n  \"auth/registerUser\",\r\n  async (userData, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(\"/api/register/\", userData); // Adjust your endpoint\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\n// Create slice\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    logout: (state) => {\r\n      state.user = null;\r\n      state.accessToken = null;\r\n      state.refreshToken = null;\r\n      state.isAuthenticated = false;\r\n      localStorage.removeItem(\"accessToken\");\r\n      localStorage.removeItem(\"refreshToken\");\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(loginUser.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(loginUser.fulfilled, (state, action) => {\r\n        state.user = action.payload.user;\r\n        state.accessToken = action.payload.access;\r\n        state.refreshToken = action.payload.refresh;\r\n        state.isAuthenticated = true;\r\n        state.loading = false;\r\n      })\r\n      .addCase(loginUser.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      .addCase(registerUser.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(registerUser.fulfilled, (state, action) => {\r\n        state.user = action.payload.user;\r\n        state.isAuthenticated = true;\r\n        state.loading = false;\r\n      })\r\n      .addCase(registerUser.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { logout } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}