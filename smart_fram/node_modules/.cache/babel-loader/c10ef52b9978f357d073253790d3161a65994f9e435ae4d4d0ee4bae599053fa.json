{"ast":null,"code":"// src/Authentication/AuthSlice.jsx\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst axiosInstance = axios.create({\n  baseURL: \"http://127.0.0.1:8000/\" // Backend URL\n});\naxiosInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"accessToken\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\naxiosInstance.interceptors.response.use(response => response, async error => {\n  const originalRequest = error.config;\n  if (error.response.status === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    const refreshToken = localStorage.getItem(\"refreshToken\");\n    try {\n      const {\n        data\n      } = await axiosInstance.post(\"/api/token/refresh/\", {\n        refresh: refreshToken\n      });\n      localStorage.setItem(\"accessToken\", data.access);\n      axios.defaults.headers[\"Authorization\"] = `Bearer ${data.access}`;\n      return axiosInstance(originalRequest);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  }\n  return Promise.reject(error);\n});\nconst initialState = {\n  user: null,\n  accessToken: localStorage.getItem(\"accessToken\") || null,\n  refreshToken: localStorage.getItem(\"refreshToken\") || null,\n  isAuthenticated: false,\n  loading: false,\n  error: null\n};\nexport const registerUser = createAsyncThunk(\"auth/registerUser\", async ({\n  email,\n  password,\n  role\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axiosInstance.post(`/api/register/`, {\n      email,\n      password,\n      role\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\n\n// **Add the loginUser async thunk here**\nexport const loginUser = createAsyncThunk(\"auth/loginUser\", async ({\n  email,\n  password,\n  role\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axiosInstance.post(`/api/login/`, {\n      email,\n      password,\n      role\n    });\n    // Store the tokens in localStorage\n    localStorage.setItem(\"accessToken\", response.data.access);\n    localStorage.setItem(\"refreshToken\", response.data.refresh);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    logout: state => {\n      state.user = null;\n      state.accessToken = null;\n      state.refreshToken = null;\n      state.isAuthenticated = false;\n      localStorage.removeItem(\"accessToken\");\n      localStorage.removeItem(\"refreshToken\");\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(registerUser.pending, state => {\n      state.loading = true;\n    }).addCase(registerUser.fulfilled, (state, action) => {\n      state.user = action.payload.user;\n      state.isAuthenticated = true;\n      state.loading = false;\n    }).addCase(registerUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Handle loginUser action\n    .addCase(loginUser.pending, state => {\n      state.loading = true;\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.user = action.payload.user;\n      state.isAuthenticated = true;\n      state.accessToken = action.payload.access;\n      state.refreshToken = action.payload.refresh;\n      state.loading = false;\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","axiosInstance","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","originalRequest","status","_retry","refreshToken","data","post","refresh","setItem","access","defaults","err","initialState","user","accessToken","isAuthenticated","loading","registerUser","email","password","role","rejectWithValue","loginUser","authSlice","name","reducers","logout","state","removeItem","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["C:/Users/mfrap/OneDrive/Desktop/FramFlo/smart_fram/src/Authentication/AuthSlice.jsx"],"sourcesContent":["// src/Authentication/AuthSlice.jsx\r\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: \"http://127.0.0.1:8000/\", // Backend URL\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"accessToken\");\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\naxiosInstance.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n    if (error.response.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true;\r\n      const refreshToken = localStorage.getItem(\"refreshToken\");\r\n      try {\r\n        const { data } = await axiosInstance.post(\"/api/token/refresh/\", {\r\n          refresh: refreshToken,\r\n        });\r\n        localStorage.setItem(\"accessToken\", data.access);\r\n        axios.defaults.headers[\"Authorization\"] = `Bearer ${data.access}`;\r\n        return axiosInstance(originalRequest);\r\n      } catch (err) {\r\n        return Promise.reject(err);\r\n      }\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  user: null,\r\n  accessToken: localStorage.getItem(\"accessToken\") || null,\r\n  refreshToken: localStorage.getItem(\"refreshToken\") || null,\r\n  isAuthenticated: false,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const registerUser = createAsyncThunk(\r\n  \"auth/registerUser\",\r\n  async ({ email, password, role }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInstance.post(`/api/register/`, {\r\n        email,\r\n        password,\r\n        role,\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\n// **Add the loginUser async thunk here**\r\nexport const loginUser = createAsyncThunk(\r\n  \"auth/loginUser\",\r\n  async ({ email, password, role }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInstance.post(`/api/login/`, {\r\n        email,\r\n        password,\r\n        role,\r\n      });\r\n      // Store the tokens in localStorage\r\n      localStorage.setItem(\"accessToken\", response.data.access);\r\n      localStorage.setItem(\"refreshToken\", response.data.refresh);\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    logout: (state) => {\r\n      state.user = null;\r\n      state.accessToken = null;\r\n      state.refreshToken = null;\r\n      state.isAuthenticated = false;\r\n      localStorage.removeItem(\"accessToken\");\r\n      localStorage.removeItem(\"refreshToken\");\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(registerUser.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(registerUser.fulfilled, (state, action) => {\r\n        state.user = action.payload.user;\r\n        state.isAuthenticated = true;\r\n        state.loading = false;\r\n      })\r\n      .addCase(registerUser.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      // Handle loginUser action\r\n      .addCase(loginUser.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(loginUser.fulfilled, (state, action) => {\r\n        state.user = action.payload.user;\r\n        state.isAuthenticated = true;\r\n        state.accessToken = action.payload.access;\r\n        state.refreshToken = action.payload.refresh;\r\n        state.loading = false;\r\n      })\r\n      .addCase(loginUser.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { logout } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}