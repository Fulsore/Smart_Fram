{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const fetchProducts = createAsyncThunk(\"seed/fetchProducts\", async () => {\n  try {\n    const response = await axios.get(\"http://localhost:8000/api/products/seeds/\");\n    console.log(\"API Response:\", response.data);\n    return response.data.Data; // Return only the 'Data' array\n  } catch (error) {\n    throw new Error(\"Failed to fetch products\");\n  }\n});\nconst SeedSlice = createSlice({\n  name: \"seed\",\n  initialState: {\n    products: [],\n    status: \"idle\",\n    error: null\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchProducts.pending, state => {\n      state.status = \"loading\";\n    }).addCase(fetchProducts.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      state.products = action.payload; // Products directly from API\n    }).addCase(fetchProducts.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.error = action.error.message;\n    });\n  }\n});\nexport default SeedSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchProducts","response","get","console","log","data","Data","error","Error","SeedSlice","name","initialState","products","status","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["C:/Users/mfrap/OneDrive/Desktop/FramFlo/smart_fram/src/ProductSlice/SeedSlice.jsx"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const fetchProducts = createAsyncThunk(\r\n  \"seed/fetchProducts\",\r\n  async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"http://localhost:8000/api/products/seeds/\"\r\n      );\r\n      console.log(\"API Response:\", response.data);\r\n      return response.data.Data; // Return only the 'Data' array\r\n    } catch (error) {\r\n      throw new Error(\"Failed to fetch products\");\r\n    }\r\n  }\r\n);\r\n\r\nconst SeedSlice = createSlice({\r\n  name: \"seed\",\r\n  initialState: {\r\n    products: [],\r\n    status: \"idle\",\r\n    error: null,\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchProducts.pending, (state) => {\r\n        state.status = \"loading\";\r\n      })\r\n      .addCase(fetchProducts.fulfilled, (state, action) => {\r\n        state.status = \"succeeded\";\r\n        state.products = action.payload; // Products directly from API\r\n      })\r\n      .addCase(fetchProducts.rejected, (state, action) => {\r\n        state.status = \"failed\";\r\n        state.error = action.error.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport default SeedSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,aAAa,GAAGF,gBAAgB,CAC3C,oBAAoB,EACpB,YAAY;EACV,IAAI;IACF,MAAMG,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAG,CAC9B,2CACF,CAAC;IACDC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,QAAQ,CAACI,IAAI,CAAC;IAC3C,OAAOJ,QAAQ,CAACI,IAAI,CAACC,IAAI,CAAC,CAAC;EAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EAC7C;AACF,CACF,CAAC;AAED,MAAMC,SAAS,GAAGZ,WAAW,CAAC;EAC5Ba,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE,MAAM;IACdN,KAAK,EAAE;EACT,CAAC;EACDO,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAChB,aAAa,CAACiB,OAAO,EAAGC,KAAK,IAAK;MACzCA,KAAK,CAACL,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDG,OAAO,CAAChB,aAAa,CAACmB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACnDF,KAAK,CAACL,MAAM,GAAG,WAAW;MAC1BK,KAAK,CAACN,QAAQ,GAAGQ,MAAM,CAACC,OAAO,CAAC,CAAC;IACnC,CAAC,CAAC,CACDL,OAAO,CAAChB,aAAa,CAACsB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAClDF,KAAK,CAACL,MAAM,GAAG,QAAQ;MACvBK,KAAK,CAACX,KAAK,GAAGa,MAAM,CAACb,KAAK,CAACgB,OAAO;IACpC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAed,SAAS,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}